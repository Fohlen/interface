
/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

html, body, #__nuxt, #__layout
    @apply h-full


.button
    @apply bg-purple-dark text-white py-2 px-4 rounded border-b-2 border-purple-darker transition-lg
    &:hover
        @apply bg-purple border-purple-dark

.responsive
    max-width 100%
    height auto

.avatar
    @apply rounded-full shadow-md border-2 border-yellow bg-black
    width 2em
    height 2em
    object-fit cover

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */


.page-enter-active, .page-leave-active
    transition all .15s ease-out
.page-enter, .page-leave-active
    transform translateY(1%)
    opacity .5


.bg-image
        @apply absolute h-full w-full pin-t pin-l
        object-fit cover
        object-position center
